[project]
name = "video_balancing"
version = "0.1.0"
description = "Video balancing service"
authors = [
    {name = "Ivan Tolstoy",email = "tolstoy.i.m@yandex.ru"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi[httpx] (>=0.115.12,<0.116.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "uvicorn (>=0.34.2,<0.35.0)",
    "pydantic (>=2.11.4,<3.0.0)",
    "pydantic-settings (>=2.9.1,<3.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python=">=3.11,<4.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.5"
locust = "^2.37.3"
pytest-asyncio = "^0.26.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.9"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "D",  # pydocstyle
    "A",  # flake8-builtins
    "S",  # flake8-bandit
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "Q",  # flake8-quotes
    "PL", # pylint
    "UP",  # pyupgrade
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "PT",  # flake8-pytest-style
    "FBT",  # flake8-boolean-trap
    "ANN",  # flake8-annotations
    "BLE",  # flake8-blind-except
    "COM",  # flake8-commas
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "PTH",  # flake8-use-pathlib
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "ARG",  # flake8-unused-arguments
    "ERA",  # eradicate
    "PGH",  # pygrep-hooks
    "RUF",  # Ruff-specific rules
    "PERF",  # Perflint
    "ASYNC",  # flake8-async
]
ignore = [
    "RUF001",
    "RUF002",
]

[tool.ruff.format]
quote-style = "double"
line-ending = "auto"
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
known-third-party=["sqlmodel"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
